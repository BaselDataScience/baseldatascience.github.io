[
  {
    "objectID": "readme.html",
    "href": "readme.html",
    "title": "baseldatascience.github.io",
    "section": "",
    "text": "baseldatascience.github.io\nbanner picture (c) CC-BY-4.0 based on https://commons.wikimedia.org/wiki/File:Basel-Muenster-04-gje.jpg"
  },
  {
    "objectID": "events.html",
    "href": "events.html",
    "title": "Data science events in Basel",
    "section": "",
    "text": "1"
  },
  {
    "objectID": "events.html#contributions-from-events",
    "href": "events.html#contributions-from-events",
    "title": "Data science events in Basel",
    "section": "contributions from events",
    "text": "contributions from events"
  },
  {
    "objectID": "events.html#footnotes",
    "href": "events.html#footnotes",
    "title": "Data science events in Basel",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nbanner picture (c) CC-BY-4.0 based on https://commons.wikimedia.org/wiki/File:Basel-Muenster-04-gje.jpg↩︎"
  },
  {
    "objectID": "posts/2023-09-06_wastewater.html",
    "href": "posts/2023-09-06_wastewater.html",
    "title": "Wastewater drug monitoring Europe",
    "section": "",
    "text": "Wastewater drug monitoring Europe\nSee https://reikoch.shinyapps.io/wastewater/ for an interactive application based on data from https://www.emcdda.europa.eu/publications/html/pods/waste-water-analysis_en#sourceData\ncode in https://github.com/baseldatascience/wastewater."
  },
  {
    "objectID": "posts/rtables.html",
    "href": "posts/rtables.html",
    "title": "rtables",
    "section": "",
    "text": "rtables"
  },
  {
    "objectID": "posts/nationalratswahlen_2023.html",
    "href": "posts/nationalratswahlen_2023.html",
    "title": "Nationalratswahlen Basel 2023",
    "section": "",
    "text": "On 2023-10-22 Nationalratswahlen took place in Switzerland, so also in Basel. The results can be seen on https://www.staatskanzlei.bs.ch/politische-rechte/wahlen-abstimmungen/wahlen-2023.html including the protocols how the 4 Basel seats in the Nationalrat were assigned.\nA nice open government data service are the downloadable vote counts from a link on this page. As the Swiss election system is far from simple I thought it informativ to look into the vote counts and see whether I could compute the election results myself and see whether I arrive at the same results as the Basel Staatskanzlei.\n\n\nCode\nlibrary(data.tree)\nlibrary(dplyr, warn.conflicts = FALSE)\nlibrary(philentropy)\nlibrary(readxl, warn.conflicts = FALSE)\n\ndistinctness &lt;- function(x) philentropy::H(table(x, useNA = 'ifany')/length(x)) / log(length(x), 2)\n\n\n\n\nIf not already in the active R session, I download the Excel file containing the vote counts. Excel file, because it is type safe (“01” != 1) and provides a familiar table format.\n\n\nCode\n# read in data if not already present\nif (!exists('dat0')) {\n  download.file('https://data.bs.ch/api/explore/v2.1/catalog/datasets/100281/exports/xlsx', tf &lt;- tempfile(fileext = '.xlsx'))\n  dat0 &lt;- readxl::read_xlsx(tf)\n}\ndim(dat0)\n\n\n[1] 610  90\n\n\n\n\n\nThis is a pretty wide data table with 90 columns. A description of the columns can be found as “Datensatzschema” in the tab “Information” on https://data.bs.ch/explore/dataset/100281/information. The first columns contain constant values, like wahlbezeichnung “Wahl von vier Mitgliedern des Nationalrates”.\nTo find and remove such columns I employ the entropy of a column’s values. The distinctness() function defined above returns 0 for columns with constant values and 1 for columns that have a different value for each row in the table (row identifying columns).\n\n\nCode\n# determine constant columns, move them to \"general\" dataframe\nentropy0 &lt;- sapply(dat0, distinctness)\ngeneral &lt;- unique(dat0[,names(entropy0[entropy0==0])])\ngeneral\n\n\n\n\n  \n\n\n\nCode\ndat1 &lt;- dat0[, setdiff(names(dat0), names(general))]\ndim(dat1)\n\n\n[1] 610  85"
  },
  {
    "objectID": "posts/nationalratswahlen_2023.html#nationalratswahlen-basel-2023",
    "href": "posts/nationalratswahlen_2023.html#nationalratswahlen-basel-2023",
    "title": "Nationalratswahlen Basel 2023",
    "section": "",
    "text": "On 2023-10-22 Nationalratswahlen took place in Switzerland, so also in Basel. The results can be seen on https://www.staatskanzlei.bs.ch/politische-rechte/wahlen-abstimmungen/wahlen-2023.html including the protocols how the 4 Basel seats in the Nationalrat were assigned.\nA nice open government data service are the downloadable vote counts from a link on this page. As the Swiss election system is far from simple I thought it informativ to look into the vote counts and see whether I could compute the election results myself and see whether I arrive at the same results as the Basel Staatskanzlei.\n\n\nCode\nlibrary(data.tree)\nlibrary(dplyr, warn.conflicts = FALSE)\nlibrary(philentropy)\nlibrary(readxl, warn.conflicts = FALSE)\n\ndistinctness &lt;- function(x) philentropy::H(table(x, useNA = 'ifany')/length(x)) / log(length(x), 2)\n\n\n\n\nIf not already in the active R session, I download the Excel file containing the vote counts. Excel file, because it is type safe (“01” != 1) and provides a familiar table format.\n\n\nCode\n# read in data if not already present\nif (!exists('dat0')) {\n  download.file('https://data.bs.ch/api/explore/v2.1/catalog/datasets/100281/exports/xlsx', tf &lt;- tempfile(fileext = '.xlsx'))\n  dat0 &lt;- readxl::read_xlsx(tf)\n}\ndim(dat0)\n\n\n[1] 610  90\n\n\n\n\n\nThis is a pretty wide data table with 90 columns. A description of the columns can be found as “Datensatzschema” in the tab “Information” on https://data.bs.ch/explore/dataset/100281/information. The first columns contain constant values, like wahlbezeichnung “Wahl von vier Mitgliedern des Nationalrates”.\nTo find and remove such columns I employ the entropy of a column’s values. The distinctness() function defined above returns 0 for columns with constant values and 1 for columns that have a different value for each row in the table (row identifying columns).\n\n\nCode\n# determine constant columns, move them to \"general\" dataframe\nentropy0 &lt;- sapply(dat0, distinctness)\ngeneral &lt;- unique(dat0[,names(entropy0[entropy0==0])])\ngeneral\n\n\n\n\n  \n\n\n\nCode\ndat1 &lt;- dat0[, setdiff(names(dat0), names(general))]\ndim(dat1)\n\n\n[1] 610  85"
  },
  {
    "objectID": "posts/nationalratswahlen_2023.html#wahlkreise",
    "href": "posts/nationalratswahlen_2023.html#wahlkreise",
    "title": "Nationalratswahlen Basel 2023",
    "section": "Wahlkreise",
    "text": "Wahlkreise\nAmong the remaining 85 columns there are 3 that identify Wahlkreise. I am not interested in the individual Wahlkreise (electoral district), but in the “Kanton Basel-Stadt”. So I split dat1 accordingly and concentrate on this pseudo Wahlkreis.\n\n\nCode\n## find right Wahlkreis for Kanton\ntable(dat1$wahlkreisbezeichnung)\n\n\n\n  Auslandschweizer Gemeinde Bettingen    Gemeinde Riehen Kanton Basel-Stadt        Stadt Basel \n               122                122                122                122                122 \n\n\nCode\n# split dat1 by Wahlkreise\nwahlkreise &lt;- split(dat1, dat1$wahlkreisbezeichnung)\n# concentrate on Kanton\nkanton0 &lt;- wahlkreise[['Kanton Basel-Stadt']]\ndim(kanton0)\n\n\n[1] 122  85\n\n\n\nscrub kanton\nThere are a number of constant columns in the kanton data table. Like with the original data table I move them out to a separate table.\n\n\nCode\nentropy_kanton &lt;- sapply(kanton0, distinctness)\nkanton_general &lt;- unique(kanton0[,names(entropy_kanton[entropy_kanton==0])])\n\nkanton &lt;- kanton0[, setdiff(names(kanton0), names(kanton_general))]\ndim(kanton)\n\n\n[1] 122  67\n\n\nThe entropy shows that the candidates’ name and its equivalents kandidaten_nr and personen_id uniquely determine a single row in the kanton table.\n\n\nexcursion: distribution of candidate ages\nJust for fun let us have a look at the distribution of the candidates’ ages:\n\n\nCode\n## age distribution of candidates\nage_distr &lt;- function(dat, dataspec=NULL) {\n  hist(dat$alter_am_jahresende_2023, freq = FALSE,\n       main = paste('Altersverteilung der Kandidaten', dataspec), xlab = 'Kandidatenalter',\n       breaks = seq(15,90,5))\n  lines(density(dat$alter_am_jahresende_2023, adjust=.5), col='blue')\n  lines(density(dat$alter_am_jahresende_2023), col='red')\n}\nage_distr(kanton)\n\n\n\n\n\nCode\n# by gender\npar(mfrow=c(2,1))\nage_distr(subset(kanton, geschlecht=='F'), 'weiblich')\nage_distr(subset(kanton, geschlecht=='M'), 'männlich')\n\n\n\n\n\nCode\npar(mfrow=c(1,1))"
  },
  {
    "objectID": "posts/nationalratswahlen_2023.html#candidate-votes",
    "href": "posts/nationalratswahlen_2023.html#candidate-votes",
    "title": "Nationalratswahlen Basel 2023",
    "section": "candidate votes",
    "text": "candidate votes\nBack to the main topic: number of votes. How many did each candidate collect?\n\n\nCode\nkanton %&gt;% \n  dplyr::select(kandidaten_nr, parteikurzbezeichnung, bisher, gewahlt, ganzer_name, stimmen_total_aus_wahlzettel, hlv_nr) %&gt;% \n  dplyr::arrange(desc(stimmen_total_aus_wahlzettel))\n\n\n\n\n  \n\n\n\nNaively one could imagine the seats go to the 4 candidates with the most votes - but that ignores the intention to try to assign seats in a fashion that mirrors the votes for lists; here in Switzerland the most decisive seat distribution factor are the votes for a “Listenverbindung”."
  },
  {
    "objectID": "posts/nationalratswahlen_2023.html#tree-structure-of-listenverbindungen",
    "href": "posts/nationalratswahlen_2023.html#tree-structure-of-listenverbindungen",
    "title": "Nationalratswahlen Basel 2023",
    "section": "tree structure of Listenverbindungen",
    "text": "tree structure of Listenverbindungen\nThere are Hauptlistenverbindungen and Unterlistenverbindungen, though these are not mandatory for lists, they generate a tree structure with 3 major blocks competing for 4 seats.\nAnalysis of a values in tree structures is not mainstream in R. I employ the package data.tree to do so and first need to construct another column in table lists that indicates the position in the tree:\n\n\nCode\n# tree structure of the lists:\nlists$pathString &lt;- paste('basel',\n                          dplyr::coalesce(lists$hlv_nr, ''),\n                          dplyr::coalesce(lists$ulv_nr, ''),\n                          lists$listen_nr,\n                          sep = '/'\n                          )\nzz &lt;- data.tree::as.Node(lists)\nprint(zz, 'parteikurzbezeichnung')\n\n\n        levelName parteikurzbezeichnung\n1  basel                               \n2   ¦--1                               \n3   ¦   ¦--1                           \n4   ¦   ¦   ¦--01                   FDP\n5   ¦   ¦   ¦--06                  JFDP\n6   ¦   ¦   °--26                  FDP+\n7   ¦   ¦--2                           \n8   ¦   ¦   ¦--03                   LDP\n9   ¦   ¦   ¦--23                   JLB\n10  ¦   ¦   °--34               LDP-Gew\n11  ¦   ¦--04                       EVP\n12  ¦   ¦--4                           \n13  ¦   ¦   ¦--07                 Mitte\n14  ¦   ¦   ¦--22                JMITTE\n15  ¦   ¦   °--36              Mitte60+\n16  ¦   °--6                           \n17  ¦       ¦--10                   GLP\n18  ¦       ¦--25                  JGLP\n19  ¦       ¦--32               GLP-K-U\n20  ¦       ¦--33                 GLP-B\n21  ¦       ¦--35               GLP-R-E\n22  ¦       ¦--37               GLP-KMU\n23  ¦       °--38                 GLP-I\n24  ¦--2                               \n25  ¦   ¦--3                           \n26  ¦   ¦   ¦--05                    SP\n27  ¦   ¦   ¦--20                  JUSO\n28  ¦   ¦   °--24                 SP60+\n29  ¦   °--5                           \n30  ¦       ¦--08                   BGB\n31  ¦       ¦--17              Basta-rm\n32  ¦       ¦--21                   jgb\n33  ¦       °--27              BastA-jA\n34  ¦--3                               \n35  ¦   ¦--09                       EDU\n36  ¦   °--7                           \n37  ¦       ¦--12                   SVP\n38  ¦       ¦--18                  JSVP\n39  ¦       ¦--30               SVP-Gew\n40  ¦       °--31                SVP60+\n41  ¦--11                           PdA\n42  ¦--14                            VA\n43  °--28                            MV\n\n\nThree lists, PdA, VA, and MV, do not belong to any Listenverbindung. There are three Hauptlistenverbindungen:\n\n1 conservatives\n2 moderate left\n3 SVP\n\namong which the seats have to be distributed.\n\ncandidates per Hauptlistenverbindung\n\n\nCode\n# number of candidates per Hauptliste\nzz$Do( function(x) {\n  x$kandidaten_total &lt;- Aggregate(node = x,\n                       attribute = \"kandidates\",\n                       aggFun = sum)\n                  }\n     )\ndata.tree::Get(zz$children, 'kandidaten_total')\n\n\n 1  2  3 11 14 28 \n68 28 18  3  2  3 \n\n\nExtensive use of Listenverbindungen blows up the number of candidates; Hauptlistenverbindung 1 comes with 68 of these!"
  },
  {
    "objectID": "posts/nationalratswahlen_2023.html#seats-per-hauptlistenverbindung",
    "href": "posts/nationalratswahlen_2023.html#seats-per-hauptlistenverbindung",
    "title": "Nationalratswahlen Basel 2023",
    "section": "seats per Hauptlistenverbindung",
    "text": "seats per Hauptlistenverbindung\nFirst step in seat distribution is to determine the quorum: the number of votes is divided by number of seats plus 1, then the next higher integer number is set as quorum. The integer part of the division of the votes of Hauptlistenverbindungen by the quorum indicates number of seats given to the Hauplistenverbindung.\nIt is possible that this first round does not distribute all seats - as is the case here. Votes of the Hauptlistenverbindung then are divided by 1 plus number of seats received and the remaining seat goes to the Hauptlistenverbindung with the highest quotient, here 1.\n\n\nCode\n# 1st seat distribution\n(quorum1 &lt;- ceiling(sum(hl_votes)/(4+1)))\n\n\n[1] 44935\n\n\nCode\n(seats1 &lt;- floor(hl_votes/quorum1))\n\n\n 2  1  3 28 11 14 \n 2  1  0  0  0  0 \n\n\nCode\n# 2nd seat distribution\nsort(hl_votes/(1+seats1), decreasing = TRUE)\n\n\n       1        2        3       28       11       14 \n38677.00 36644.67 31600.00  2163.00  1933.00  1690.00 \n\n\nWithin the Hauptlistenverbindung the seats get distributed according to the same multi-step process first to Unterlistenverbindung, then Liste.\nDetailed protocols of this process are provided by the Basel Staatskanzlei, see https://www.staatskanzlei.bs.ch/dam/jcr:302a9016-ef8c-41b8-888a-f6d7332ff1ab/Ausw_5a.pdf.\nFor a general picture what Swiss voters can do with their ballot paper, see https://www.srf.ch/news/schweiz/wahlhilfe/kumulieren-und-panaschieren-so-waehlt-man-mit-listen."
  },
  {
    "objectID": "posts/uvb_vitaminD.html#background",
    "href": "posts/uvb_vitaminD.html#background",
    "title": "UVB radiation and vitamin D balance",
    "section": "Background",
    "text": "Background\nVitamin D has attracted considerable attention in recent years\n\n\nhumans produce vitamin D in their skin using UVB from sunlight\nvalues neither for minimum nor maximum (!) blood concentration of vitamin D are universally accepted\nwith little UV - as in winter - natural supply seems to be too low in our latitude"
  },
  {
    "objectID": "posts/uvb_vitaminD.html#clinical-study-uvb---vitamin-d",
    "href": "posts/uvb_vitaminD.html#clinical-study-uvb---vitamin-d",
    "title": "UVB radiation and vitamin D balance",
    "section": "Clinical study UVB -> vitamin D",
    "text": "Clinical study UVB -&gt; vitamin D\n\ninteresting article 2021 in PNAS: https://www.pnas.org/doi/10.1073/pnas.2015867118\n\n\n75 participants in London\n5 times UVB irradiated in 3-4 days time intervals\n5 different UVB sources\nfull body or partial exposure\n\n\n\nwhat can I see when I redo the authors’ analysis?"
  },
  {
    "objectID": "posts/uvb_vitaminD.html#data",
    "href": "posts/uvb_vitaminD.html#data",
    "title": "UVB radiation and vitamin D balance",
    "section": "Data",
    "text": "Data\nMost journals require also data to be published.\nHere it is an excel spreadsheet stored on https://osf.io, freely accessible:"
  },
  {
    "objectID": "posts/uvb_vitaminD.html#download-data",
    "href": "posts/uvb_vitaminD.html#download-data",
    "title": "UVB radiation and vitamin D balance",
    "section": "Download data",
    "text": "Download data\ndownloading the data into temporary file tf\n\ntf &lt;- tempfile(pattern = 'vitamin_d', fileext = '.xlsx')\ndownload.file('https://osf.io/download/3x2q8/', destfile = tf)\n\n\nthere is a legend block underneath the data block\nvariable names are going to be fun!\n\n\nprint(readxl::read_xlsx(tf, col_names = FALSE), n=5)\n\n# A tibble: 90 × 29\n  ...1      ...2  ...3  ...4  ...5  ...6  ...7  ...8  ...9  ...10 ...11 ...12 ...13 ...14 ...15 ...16 ...17 ...18\n  &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;\n1 &lt;NA&gt;      &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  Seru… &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  Weig… &lt;NA&gt; \n2 &lt;NA&gt;      &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt; \n3 &lt;NA&gt;      &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  Seru… &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt; \n4 Study na… Orig… New … Age   FST   Sex   BSA … UVR … UV6 … Date… Base… Post… Post… Post… Post… Post… CIE … CIE …\n5 ICE56 A2b 008   1     29    II    F     PB    UV6   DDC   40963 51.4… 50.4  44.4… 49.3  53.5  53.8  211.… 341.…\n# ℹ 85 more rows\n# ℹ 11 more variables: ...19 &lt;chr&gt;, ...20 &lt;chr&gt;, ...21 &lt;chr&gt;, ...22 &lt;chr&gt;, ...23 &lt;chr&gt;, ...24 &lt;chr&gt;,\n#   ...25 &lt;chr&gt;, ...26 &lt;chr&gt;, ...27 &lt;chr&gt;, ...28 &lt;chr&gt;, ...29 &lt;chr&gt;"
  },
  {
    "objectID": "posts/uvb_vitaminD.html#name-variables",
    "href": "posts/uvb_vitaminD.html#name-variables",
    "title": "UVB radiation and vitamin D balance",
    "section": "Name variables",
    "text": "Name variables\n\nstrip off all rows that have empty first column\nRow 4 and 3 seem to describe the column\n\n\ndat0 &lt;- readxl::read_xlsx(tf, skip = 4, col_names = FALSE) |&gt;\n  dplyr::filter(!is.na(...1))\nnam &lt;- readxl::read_xlsx(tf, skip = 2, n_max = 1)\nnames(dat0) &lt;- unname(dplyr::coalesce(unlist(nam),\n                                      paste0('blue', names(nam))))"
  },
  {
    "objectID": "posts/uvb_vitaminD.html#fix-variable-names",
    "href": "posts/uvb_vitaminD.html#fix-variable-names",
    "title": "UVB radiation and vitamin D balance",
    "section": "Fix variable names",
    "text": "Fix variable names\nblanks are bad in names, but ‘-’ and ‘(’ are even worse\n\nnames(dat0) &lt;- vapply(X = names(dat0),\n                      FUN = function(x) {\n  if (x == 'New Vol No') return('pid')\n  if (startsWith(x, 'CIE pre')) return('blue0nm')\n  if (stringr::str_count(x, ' ') == 1) {\n    # up to first (and only) blank\n    return(stringr::str_split_1(x, ' ')[1])\n  }\n  if (stringr::str_count(x, ' \\\\(')) {\n    # up to first ( and replace blanks with underscores\n    gsub(' ', '_', stringr::str_split_1(x, pattern = ' \\\\(')[[1]])\n  } else x\n},\n                      FUN.VALUE = 'character')"
  },
  {
    "objectID": "posts/uvb_vitaminD.html#variable-names",
    "href": "posts/uvb_vitaminD.html#variable-names",
    "title": "UVB radiation and vitamin D balance",
    "section": "Variable names",
    "text": "Variable names\n\nstr(dat0)\n\ntibble [75 × 29] (S3: tbl_df/tbl/data.frame)\n $ Study            : chr [1:75] \"ICE56 A2b\" \"ICE56 A2b\" \"ICE56 A2b\" \"ICE56 A2b\" ...\n $ Original Vol No  : chr [1:75] \"008\" \"009\" \"010\" \"011\" ...\n $ pid              : num [1:75] 1 2 3 4 5 6 7 8 9 10 ...\n $ Age              : num [1:75] 29 26 32 21 29 24 26 25 23 21 ...\n $ FST              : chr [1:75] \"II\" \"I\" \"I\" \"I\" ...\n $ Sex              : chr [1:75] \"F\" \"F\" \"F\" \"F\" ...\n $ BSA              : chr [1:75] \"PB\" \"PB\" \"PB\" \"PB\" ...\n $ UVR              : chr [1:75] \"UV6\" \"UV6\" \"UV6\" \"UV6\" ...\n $ UV6              : chr [1:75] \"DDC\" \"DDC\" \"DDC\" \"DDC\" ...\n $ Date of 1st irrad: POSIXct[1:75], format: \"2012-02-24\" \"2012-02-24\" \"2012-02-24\" \"2012-02-24\" ...\n $ Baseline         : num [1:75] 51.5 61.8 32 13.9 26.9 ...\n $ Post UVR 1       : num [1:75] 50.4 64.2 30.1 17.4 35.2 ...\n $ Post UVR 2       : num [1:75] 44.4 79.2 30.5 20.1 42.2 ...\n $ Post UVR 3       : num [1:75] 49.3 71.8 39.1 22.8 44.3 ...\n $ Post UVR 4       : num [1:75] 53.5 70.6 42 28.8 44.3 ...\n $ Post UVR 5       : num [1:75] 53.8 79.3 41.1 27.7 47.8 ...\n $ CIE_Erythema     : num [1:75] 211 211 211 211 211 ...\n $ blue0nm          : num [1:75] 342 342 342 342 342 ...\n $ blue1nm          : num [1:75] 304 304 304 304 304 ...\n $ blue2nm          : num [1:75] 269 269 269 269 269 ...\n $ blue3nm          : num [1:75] 237 237 237 237 237 ...\n $ blue4nm          : num [1:75] 208 208 208 208 208 ...\n $ blue5nm          : num [1:75] 182 182 182 182 182 ...\n $ blue6nm          : num [1:75] 157 157 157 157 157 ...\n $ blue7nm          : num [1:75] 135 135 135 135 135 ...\n $ blue8nm          : num [1:75] 115 115 115 115 115 ...\n $ blue9nm          : num [1:75] 97.8 97.8 97.8 97.8 97.8 ...\n $ Bolsee           : num [1:75] 65.1 65.1 65.1 65.1 65.1 ...\n $ Olds             : num [1:75] 149 149 149 149 149 ..."
  },
  {
    "objectID": "posts/uvb_vitaminD.html#create-time-variable",
    "href": "posts/uvb_vitaminD.html#create-time-variable",
    "title": "UVB radiation and vitamin D balance",
    "section": "Create time variable",
    "text": "Create time variable\nVariables Baseline, Post UVR 1, Post UVR 2, … provide the D3 measurements at the consecutive visits. For a decent model I want an explicit time variable.\n\ndat_ts &lt;- dat0 |&gt;\n  dplyr::select(-c('Study', 'Original Vol No', 'Date of 1st irrad')) |&gt;\n  tidyr::pivot_longer(\n    cols = c('Baseline',\n             tidyselect::starts_with('Post', ignore.case=FALSE)),\n    values_to = 'd3',\n    values_drop_na = TRUE) |&gt; \n  dplyr::mutate(\n    time = dplyr::coalesce(\n      as.integer(stringr::str_split_i(name, ' ', 3)), 0),\n    .after = UV6)"
  },
  {
    "objectID": "posts/uvb_vitaminD.html#full-vs-partial-body-irradiation",
    "href": "posts/uvb_vitaminD.html#full-vs-partial-body-irradiation",
    "title": "UVB radiation and vitamin D balance",
    "section": "Full vs partial body irradiation",
    "text": "Full vs partial body irradiation\n\nggplot(dat_ts, aes(x=time, y=d3, group=pid, color=UVR)) +\n  geom_line() + geom_point() + facet_wrap(vars(BSA))"
  },
  {
    "objectID": "posts/uvb_vitaminD.html#full-vs-partial-trends",
    "href": "posts/uvb_vitaminD.html#full-vs-partial-trends",
    "title": "UVB radiation and vitamin D balance",
    "section": "Full vs partial trends",
    "text": "Full vs partial trends\n\nggplot(dat_ts, aes(x=time, y=d3, group=BSA, color=BSA)) + geom_point() + geom_smooth(method = lm)"
  },
  {
    "objectID": "posts/uvb_vitaminD.html#control-of-similar-baseline",
    "href": "posts/uvb_vitaminD.html#control-of-similar-baseline",
    "title": "UVB radiation and vitamin D balance",
    "section": "Control of similar baseline",
    "text": "Control of similar baseline\n\nggplot(data=dat_ts |&gt; dplyr::filter(time == 0),\n       aes(x=BSA, y=d3, group=BSA, fill=BSA)) +\n  geom_boxplot() +\n  geom_point() + theme(legend.position=\"none\")"
  },
  {
    "objectID": "posts/uvb_vitaminD.html#mixed-model",
    "href": "posts/uvb_vitaminD.html#mixed-model",
    "title": "UVB radiation and vitamin D balance",
    "section": "Mixed model",
    "text": "Mixed model\n\noptions(width=78)\n(m1 &lt;- lme4::lmer(d3 ~ time + BSA:time + UVR:time + (time|pid),\n                  data = dat_ts))\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: d3 ~ time + BSA:time + UVR:time + (time | pid)\n   Data: dat_ts\nREML criterion at convergence: 2811.554\nRandom effects:\n Groups   Name        Std.Dev. Corr \n pid      (Intercept) 16.629        \n          time         1.983   -0.51\n Residual              5.180        \nNumber of obs: 400, groups:  pid, 75\nFixed Effects:\n (Intercept)          time    time:BSAPB  time:UVRFIL2  time:UVRFIL9  \n     34.7330        8.0092       -7.1377        1.1129        0.6351  \ntime:UVRPUVA   time:UVRUV6  \n     -3.9687        1.7181"
  },
  {
    "objectID": "posts/uvb_vitaminD.html#quality-control-residuals-vs-predictions",
    "href": "posts/uvb_vitaminD.html#quality-control-residuals-vs-predictions",
    "title": "UVB radiation and vitamin D balance",
    "section": "Quality control: residuals vs predictions",
    "text": "Quality control: residuals vs predictions\n\nplot(m1)"
  },
  {
    "objectID": "posts/uvb_vitaminD.html#confidence-intervals-of-model-parameters",
    "href": "posts/uvb_vitaminD.html#confidence-intervals-of-model-parameters",
    "title": "UVB radiation and vitamin D balance",
    "section": "Confidence intervals of model parameters",
    "text": "Confidence intervals of model parameters\n\nmixedup::summarise_model(m1)\n\n    Group    Effect Variance    SD SD_2.5 SD_97.5 Var_prop\n      pid Intercept   276.53 16.63  14.04   19.71     0.90\n      pid      time     3.93  1.98   1.48    2.39     0.01\n Residual        NA    26.83  5.18   4.76    5.67     0.09\n         Term Value   SE     t P_value Lower_2.5 Upper_97.5\n    Intercept 34.73 1.97 17.61    0.00     30.87      38.60\n         time  8.01 0.48 16.70    0.00      7.07       8.95\n   time:BSAPB -7.14 0.82 -8.75    0.00     -8.74      -5.54\n time:UVRFIL2  1.11 1.13  0.99    0.32     -1.10       3.33\n time:UVRFIL9  0.64 1.13  0.56    0.57     -1.58       2.85\n time:UVRPUVA -3.97 0.76 -5.24    0.00     -5.45      -2.48\n  time:UVRUV6  1.72 0.78  2.20    0.03      0.19       3.25"
  },
  {
    "objectID": "posts/uvb_vitaminD.html#d3-time-courses-by-exposure-by-radiation-source",
    "href": "posts/uvb_vitaminD.html#d3-time-courses-by-exposure-by-radiation-source",
    "title": "UVB radiation and vitamin D balance",
    "section": "D3 time courses by exposure & by radiation source",
    "text": "D3 time courses by exposure & by radiation source\n\n# import model prediction\n# create a factor of all combinations of BSA and UVR\n# replace radiation doses with cumulative dose over study\ndat &lt;- dat_ts |&gt;\n  dplyr::mutate(pred1=predict(m1),\n                BSA_UVR=interaction(BSA,UVR, lex.order = TRUE),\n                across(CIE_Erythema:Olds, function(x) x*time/100))\nggplot2::ggplot(\n  data=dat,\n  aes(x=time, y=d3, color=BSA_UVR, group=BSA_UVR)) +\n  geom_point() + geom_path(aes(group=pid)) + \n  geom_path(aes(group=pid, y=pred1)) +\n  ggplot2::facet_wrap(~BSA_UVR) + theme(legend.position = \"none\")"
  },
  {
    "objectID": "posts/uvb_vitaminD.html#d3-time-courses-by-exposure-by-radiation-source-output",
    "href": "posts/uvb_vitaminD.html#d3-time-courses-by-exposure-by-radiation-source-output",
    "title": "UVB radiation and vitamin D balance",
    "section": "D3 time courses by exposure & by radiation source",
    "text": "D3 time courses by exposure & by radiation source"
  },
  {
    "objectID": "posts/uvb_vitaminD.html#measurements-vs-predictions",
    "href": "posts/uvb_vitaminD.html#measurements-vs-predictions",
    "title": "UVB radiation and vitamin D balance",
    "section": "Measurements vs predictions",
    "text": "Measurements vs predictions\n\nggplot(aes(x=pred1, y=d3, colour=BSA_UVR, group=BSA_UVR), data=dat) +\n  geom_point() + geom_smooth(se=FALSE)"
  },
  {
    "objectID": "posts/uvb_vitaminD.html#correlation-of-radiation-profiles-with-predicted-d3",
    "href": "posts/uvb_vitaminD.html#correlation-of-radiation-profiles-with-predicted-d3",
    "title": "UVB radiation and vitamin D balance",
    "section": "Correlation of radiation profiles with predicted D3",
    "text": "Correlation of radiation profiles with predicted D3\n\nstats::cor(dat |&gt; dplyr::select(c('d3', tidyselect::starts_with('blue'))))\n\n               d3   blue0nm   blue1nm   blue2nm   blue3nm   blue4nm   blue5nm\nd3      1.0000000 0.4131079 0.4207088 0.4289413 0.4354258 0.4402644 0.4416013\nblue0nm 0.4131079 1.0000000 0.9968950 0.9870326 0.9692452 0.9431757 0.9087768\nblue1nm 0.4207088 0.9968950 1.0000000 0.9965712 0.9854712 0.9660437 0.9381268\nblue2nm 0.4289413 0.9870326 0.9965712 1.0000000 0.9961381 0.9840550 0.9634114\nblue3nm 0.4354258 0.9692452 0.9854712 0.9961381 1.0000000 0.9958556 0.9831601\nblue4nm 0.4402644 0.9431757 0.9660437 0.9840550 0.9958556 1.0000000 0.9957017\nblue5nm 0.4416013 0.9087768 0.9381268 0.9634114 0.9831601 0.9957017 1.0000000\nblue6nm 0.4374423 0.8667492 0.9023448 0.9346632 0.9621595 0.9829376 0.9957418\nblue7nm 0.4287545 0.8189607 0.8603039 0.8991626 0.9339357 0.9625240 0.9834741\nblue8nm 0.4166475 0.7679570 0.8143766 0.8590846 0.9004365 0.9361598 0.9646269\nblue9nm 0.4023697 0.7165619 0.7672847 0.8170271 0.8641078 0.9061162 0.9412731\n          blue6nm   blue7nm   blue8nm   blue9nm\nd3      0.4374423 0.4287545 0.4166475 0.4023697\nblue0nm 0.8667492 0.8189607 0.7679570 0.7165619\nblue1nm 0.9023448 0.8603039 0.8143766 0.7672847\nblue2nm 0.9346632 0.8991626 0.8590846 0.8170271\nblue3nm 0.9621595 0.9339357 0.9004365 0.8641078\nblue4nm 0.9829376 0.9625240 0.9361598 0.9061162\nblue5nm 0.9957418 0.9834741 0.9646269 0.9412731\nblue6nm 1.0000000 0.9959728 0.9848030 0.9683425\nblue7nm 0.9959728 1.0000000 0.9964056 0.9868094\nblue8nm 0.9848030 0.9964056 1.0000000 0.9969735\nblue9nm 0.9683425 0.9868094 0.9969735 1.0000000"
  },
  {
    "objectID": "posts/uvb_vitaminD.html#cumulative-irradiation-dose-instead-of-time",
    "href": "posts/uvb_vitaminD.html#cumulative-irradiation-dose-instead-of-time",
    "title": "UVB radiation and vitamin D balance",
    "section": "cumulative irradiation dose instead of time",
    "text": "cumulative irradiation dose instead of time\n\n(m2 &lt;- lme4::lmer(d3 ~ blue5nm + BSA:blue5nm + UVR:blue5nm + (blue5nm|pid),\n                  data = dat,\n                  control=lmerControl(optimizer = 'Nelder_Mead')))\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: d3 ~ blue5nm + BSA:blue5nm + UVR:blue5nm + (blue5nm | pid)\n   Data: dat\nREML criterion at convergence: 2817.294\nRandom effects:\n Groups   Name        Std.Dev. Corr \n pid      (Intercept) 16.48         \n          blue5nm      1.42    -0.53\n Residual              5.27         \nNumber of obs: 400, groups:  pid, 75\nFixed Effects:\n    (Intercept)          blue5nm    blue5nm:BSAPB  blue5nm:UVRFIL2  \n        34.7326           5.3637          -4.1213           0.1152  \nblue5nm:UVRFIL9  blue5nm:UVRPUVA   blue5nm:UVRUV6  \n         0.5710           1.3815           0.2030"
  },
  {
    "objectID": "posts/uvb_vitaminD.html#quality-control-residuals-vs-predictions-1",
    "href": "posts/uvb_vitaminD.html#quality-control-residuals-vs-predictions-1",
    "title": "UVB radiation and vitamin D balance",
    "section": "Quality control: residuals vs predictions",
    "text": "Quality control: residuals vs predictions\n\nplot(m2)"
  },
  {
    "objectID": "posts/uvb_vitaminD.html#confidence-intervals-of-model-2-parameters",
    "href": "posts/uvb_vitaminD.html#confidence-intervals-of-model-2-parameters",
    "title": "UVB radiation and vitamin D balance",
    "section": "Confidence intervals of model 2 parameters",
    "text": "Confidence intervals of model 2 parameters\n\nmixedup::summarise_model(m2)\n\n    Group    Effect Variance    SD SD_2.5 SD_97.5 Var_prop\n      pid Intercept   271.74 16.48  13.91   19.54     0.90\n      pid   blue5nm     2.02  1.42   1.03    1.75     0.01\n Residual        NA    27.77  5.27   4.84    5.77     0.09\n            Term Value   SE     t P_value Lower_2.5 Upper_97.5\n       Intercept 34.73 1.96 17.74    0.00     30.89      38.57\n         blue5nm  5.36 0.34 16.01    0.00      4.71       6.02\n   blue5nm:BSAPB -4.12 0.55 -7.56    0.00     -5.19      -3.05\n blue5nm:UVRFIL2  0.12 0.77  0.15    0.88     -1.40       1.63\n blue5nm:UVRFIL9  0.57 0.86  0.66    0.51     -1.12       2.27\n blue5nm:UVRPUVA  1.38 0.76  1.81    0.07     -0.11       2.87\n  blue5nm:UVRUV6  0.20 0.53  0.38    0.70     -0.84       1.24\n\n\n\nThat means the source of UVB radiation, UVR, is not significant here!"
  },
  {
    "objectID": "posts/uvb_vitaminD.html#simplest-model",
    "href": "posts/uvb_vitaminD.html#simplest-model",
    "title": "UVB radiation and vitamin D balance",
    "section": "simplest(?) model",
    "text": "simplest(?) model\n\n(m3 &lt;- lme4::lmer(d3 ~ blue5nm + BSA:blue5nm + (blue5nm|pid),\n                  data = dat,\n                  control=lmerControl(optimizer = 'Nelder_Mead')))\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: d3 ~ blue5nm + BSA:blue5nm + (blue5nm | pid)\n   Data: dat\nREML criterion at convergence: 2824.432\nRandom effects:\n Groups   Name        Std.Dev. Corr \n pid      (Intercept) 16.494        \n          blue5nm      1.401   -0.54\n Residual              5.283        \nNumber of obs: 400, groups:  pid, 75\nFixed Effects:\n  (Intercept)        blue5nm  blue5nm:BSAPB  \n       34.902          5.582         -4.109"
  },
  {
    "objectID": "posts/uvb_vitaminD.html#quality-control-residuals-vs-predictions-2",
    "href": "posts/uvb_vitaminD.html#quality-control-residuals-vs-predictions-2",
    "title": "UVB radiation and vitamin D balance",
    "section": "Quality control: residuals vs predictions",
    "text": "Quality control: residuals vs predictions\n\nplot(m3)"
  },
  {
    "objectID": "posts/uvb_vitaminD.html#confidence-intervals-of-model-3-parameters",
    "href": "posts/uvb_vitaminD.html#confidence-intervals-of-model-3-parameters",
    "title": "UVB radiation and vitamin D balance",
    "section": "Confidence intervals of model 3 parameters",
    "text": "Confidence intervals of model 3 parameters\n\nmixedup::summarise_model(m3)\n\n    Group    Effect Variance    SD SD_2.5 SD_97.5 Var_prop\n      pid Intercept   272.06 16.49  13.92   19.55     0.90\n      pid   blue5nm     1.96  1.40   1.04    1.77     0.01\n Residual        NA    27.91  5.28   4.85    5.79     0.09\n          Term Value   SE      t P_value Lower_2.5 Upper_97.5\n     Intercept 34.90 1.96  17.83    0.00     31.07      38.74\n       blue5nm  5.58 0.26  21.59    0.00      5.07       6.09\n blue5nm:BSAPB -4.11 0.34 -12.11    0.00     -4.77      -3.44"
  },
  {
    "objectID": "posts/uvb_vitaminD.html#measurements-vs-final-predictions",
    "href": "posts/uvb_vitaminD.html#measurements-vs-final-predictions",
    "title": "UVB radiation and vitamin D balance",
    "section": "Measurements vs final predictions",
    "text": "Measurements vs final predictions\n\ndat_final &lt;- dat |&gt;\n  dplyr::mutate(pred3=predict(m3))\nggplot(aes(x=pred3, y=d3, colour=BSA_UVR, group=BSA_UVR), data=dat_final) +\n  geom_point() + geom_smooth(se=FALSE)"
  },
  {
    "objectID": "posts/uvb_vitaminD.html#comparison-of-prediction-quality",
    "href": "posts/uvb_vitaminD.html#comparison-of-prediction-quality",
    "title": "UVB radiation and vitamin D balance",
    "section": "comparison of prediction quality",
    "text": "comparison of prediction quality\n\nggplot(data=dat_final, aes(x=d3, y=pred1)) + geom_point(color='black') +\n  geom_point(aes(y=pred3, alpha=0.4), color='red') +\n  theme(legend.position=\"none\")\n\n\n\n\nBasel Data Science"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Basel Data Science",
    "section": "",
    "text": "1"
  },
  {
    "objectID": "index.html#footnotes",
    "href": "index.html#footnotes",
    "title": "Basel Data Science",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nbanner picture (c) CC-BY-4.0 based on https://commons.wikimedia.org/wiki/File:Basel-Muenster-04-gje.jpg↩︎"
  }
]